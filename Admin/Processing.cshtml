<link href="~/Content/StyleSheet.css" rel="stylesheet" type="text/css" />
@{
    Layout="";
    var db = Database.Open("StarterSite");
    if(IsPost){
        if(Request["Action"]=="AddNewTask"){
            var counter = db.QueryValue("SELECT COUNT(Id) FROM Tasks")+1;
            var taskName = Request["TaskName"];
            var testTypeId = Request["TestTypeId"].AsInt();
            var cateId = Request["CategoryId"].AsInt();
            db.Execute("INSERT INTO Tasks VALUES (@0,@1,@2,@3)",counter,taskName,testTypeId,cateId);

            <p>@taskName</p>
            <p>@testTypeId</p>
            <p>@cateId</p>
            <p>@counter</p>
        }

        if(Request["Action"]=="EditTask"){
            var taskId = Request["TaskId"].AsInt();
            var taskInfo = Functions.getTaskInfo(taskId);
            <div style="margin: 10px;">
                <div style="font-size: smaller; padding: 5px"><strong>Task Name :</strong></div>
                <div><input value="@taskInfo.Name" style="width: 250px" id="mt-edit-task-name"></div>
            </div>
            <div style="margin: 10px;">
                <div style="font-size: smaller; padding: 5px"><strong>Test type :</strong></div>
                <div>@Html.DropDownList("mt-edit-task-testType",null,Functions.getSelectListTestType(),taskInfo.TypeId,null)</div>
            </div>
            <div style="margin: 10px;">
                <div style="font-size: smaller; padding: 5px"><strong>Category :</strong></div>
                <div>@Html.DropDownList("mt-edit-task-category",null,Functions.getSelectListCategory(),taskInfo.CategoryId,null)</div>
            </div>
        }

        if(Request["Action"]=="UpdateTaskInfo"){
            var taskId= Request["TaskId"].AsInt();
            var newTaskName = Request["TaskName"];
            var newTestType = Request["TestType"].AsInt();
            var newCategoryId = Request["CateId"].AsInt();
            db.Execute("UPDATE Tasks SET Name=@0, TypeId=@1,CategoryId=@2 WHERE Id=@3",newTaskName,newTestType,newCategoryId,taskId);
            <p>@taskId</p>
            <p>@newTaskName</p>
            <p>@newTestType</p>
            <p>@newCategoryId</p>
        }

        if(Request["Action"]=="DeleteTaskItem"){
            var taskId= Request["TaskId"].AsInt();
            db.Execute("DELETE FROM Tasks WHERE Id=@0",taskId);
        }

        if(Request["Action"]=="AddNewCate"){
            var cateName = Request["CateName"];
            var counter = db.QueryValue("SELECT COUNT(Id) FROM Categories")+1;
            db.Execute("INSERT INTO Categories VALUES(@0,@1)",counter,cateName);
        }

        if(Request["Action"]=="EditCategoryItem"){
            var cateId = Request["CateId"].AsInt();
            var cateInfo = Functions.getCategoryName(cateId);
            <div style="margin: 10px;">
                <label style="font-size: smaller; padding: 5px"><strong>Category Name :</strong></label>
                <input value="@cateInfo" style="width: 250px" id="mt-edit-category-name">
            </div>
        }

        if(Request["Action"]=="UpdateCategoryItem"){
            var cateId = Request["CateId"].AsInt();
            var cateName = Request["CateName"];
            db.Execute("UPDATE Categories SET Name=@0 WHERE Id=@1",cateName,cateId);
        }

        /*------------------MANAGE MEMBER SECTION-------------------------*/

        if(Request["Action"]=="EditMemberDetails"){
            var userId= Request["UserId"].AsInt();
            var userInfo = Functions.getUserInfo(userId);
            <div id="vm-member-info-detail-dialog" title="Edit Member Info">
                <fieldset style="margin: auto">
                <ol>
                    <li class="email">
                        <div class="regis-component-small"><label for="email">Email address :</label></div>
                        <div class="regis-component-small"><span>@userInfo.Email</span></div>
                    </li>
                    <li class="firstName">
                        <div class="regis-component-small"><label for="firstName" @if(!ModelState.IsValidField("firstName")){<text>class="error-label"</text>}>First Name :</label></div>
                        <div class="regis-component-small"><input type="text" id="firstName" name="firstName" value="@userInfo.FirstName" @Validation.For("firstName") /></div>
                    </li>
                    <li class="lastName">
                        <div class="regis-component-small"><label for="lastName" @if(!ModelState.IsValidField("lastName")){<text>class="error-label"</text>}>Last Name :</label></div>
                        <div class="regis-component-small"><input type="text" id="lastName" name="lastName" value="@userInfo.LastName" @Validation.For("lastName") /></div>
                    </li>                    
                    <li>
                        <div class="regis-component-small"><label for="employeeId" @if(!ModelState.IsValidField("confirmPassword")) {<text>class="error-label"</text>}>Employee Id :</label></div>
                        <div class="regis-component-small"><input type="text" id="employeeId" name="employeeId" @Validation.For("employeeId") value="@if(userInfo.EmployeeId != 0){<text>@userInfo.EmployeeId</text>}" /></div>
                    </li>
                    <li class="Supervisor">
                        <div class="regis-component-small"><label for="supervisor">Project Manager :</label></div>
                        <div class="regis-component-small">@Html.DropDownList("supervisor",null,Functions.getResources(role: "PM"),userInfo.ProjectManagerId,null)</div>
                    </li>
                    <li class="roles">
                        <div class="regis-component-small">Role: </div>
                        <div style="padding: 5px; display: inline-block">@Helpers.RolesList(currentRole: Roles.GetRolesForUser(userInfo.Email)[0])</div>
                    </li>
                </ol>
                </fieldset>
            </div>
        }

        if(Request["Action"]=="UpdateMemberDetails"){
            var userId = Request["UserId"].AsInt();
            var fName = Request["FirstName"];
            var lName = Request["LastName"];
            var emplId = Request["EmplId"];
            var projectManagerId = Request["SupervisorId"];
            var role = Request["RoleId"];
            @*<p>@userId</p>
            <p>@fName</p>
            <p>@emplId.AsInt()</p>
            <p>@projectManagerId</p>
            <p>@role</p>*@
            
            var updatedRows = Functions.updateUserInfo(userId,fName,lName,emplId,null,role,null,projectManagerId);
            if(updatedRows !=0){
                <p style="color: green; font-weight: bold">YOU'VE UPDATED SUCCESSFULLY</p>
            }
            else{
                <p style="color: red; font-weight: bold">CANNOT UPDATE USER INFO. PLEASE CHECK YOUR DATA OR CONTACT TO ADMIN</p>
            }
        }
    }
}


