@{
    Page.Title = "Update Resources";
    
    //Connect to database
    var db = Database.Open("StarterSite");

    //Initiate variables
    int counter = 0;

    var allMember = Functions.getAllResources("master@tmailinator.com");
    WebGrid grid  = new WebGrid(allMember,defaultSort:"ProjectMangerId",canSort:false);
}

<script>
    $(function () {
        var charValidation = new RegExp("[!#$@@%^&*()+=-]|\\d");
        var numValidation = new RegExp("[!#$%@@^&*()+=-]|[a-z]", "i");
        $("div[id*=vm-member-email]").click(function () {
            var userId = $(this).attr('id').match("[0-9]+").toString();
            var posting = $.post("/Admin/Processing.cshtml", { Action: "EditMemberDetails", UserId: userId });
            posting.done(function (data) {
                var item = $("<div></div>").append(data).find("#vm-member-info-detail-dialog");
                item.dialog({
                    modal: true,
                    width: 570,
                    buttons: [
                        { text: "Save", click: function () {
                            var fName = $("input#firstName").val().toString();
                            var lName = $("input#lastName").val().toString();
                            var emplId = $("input#employeeId").val().toString();
                            var supervisorId = $("select#supervisor").find(":selected").val().toString();
                            var roleId = $("input#role:checked").val().toString();
                            if (charValidation.test(fName) == true || charValidation.test(lName) == true || numValidation.test(emplId) == true) {
                                $("input#firstName").removeClass("inputFeedbackError");
                                $("input#lastName").removeClass("inputFeedbackError");
                                $("input#employeeId").removeClass("inputFeedbackError");
                                if (charValidation.test(fName) == true) { $("input#firstName").addClass("inputFeedbackError"); }
                                if (charValidation.test(lName) == true) { $("input#lastName").addClass("inputFeedbackError"); }
                                if (numValidation.test(emplId) == true) { $("input#employeeId").addClass("inputFeedbackError") }
                            }
                            else {
                                var postingUpdate = $.post("/Admin/Processing.cshtml",
                                            { Action: 'UpdateMemberDetails',
                                                UserId: userId,
                                                FirstName: fName,
                                                LastName: lName,
                                                EmplId: emplId,
                                                SupervisorId: supervisorId,
                                                RoleId: roleId
                                            });
                                postingUpdate.done(function (data) {
                                    item.dialog("close");
                                    $("<div></div>").append(data).dialog({
                                        buttons: [{ text: "OK", click: function () { $(this).dialog("close"); location.reload(); } }]
                                    });
                                });
                            }
                        }
                        },
                    {
                        text: "Cancel", click: function () {
                            item.dialog("close");
                        }
                    }]
                });
            })
        });
    });

    //SET CSS FOR ACTIVE TAB
    $("#nav1").attr('class', 'componentActive');
    $("#nav1 a").css('color', 'blue');
    $("div#sub-nav1").removeClass("hidden");
    $("div#sub-nav1").children().eq(1).siblings().addClass("opacity");
</script>


<div style="margin: 20px 20px 20px 700px">
<form method="post">
    @AntiForgery.GetHtml()
    <div class="vm-search-field">
        <div>
            <input type="text" name="vm-text-filter" placeholder="Empl.ID / Email Address / Name" value="@Request.Form["vm-text-filter"]"
            style="border: none; margin-left: 10px ;width: 200px; overflow: hidden; outline: none; background-color: transparent;">
        </div>
        <div>
            <button type="submit" name="Filter" value="Filter"><span><img src="/Images/searchBtn.png" alt="filter"></span></button>
        </div>
    </div>
</form> 
</div>   

@if(IsPost){
    AntiForgery.Validate();
    //Initialize variables             
        var strFilter = Request.Form["vm-text-filter"];
        var currentMemberRole = Request.Form["currentMemberRole"];                
        var newRole = Request.Form["role"];                
        var newSupervisor = Request.Form["supervisor"].AsInt();
        var userEmail = Request.Form["UserEmail"];
                       
    //In Case 1: Filter button is pressed
    if(Request.Form["Filter"] == "Filter"){ 
        var queryFilter = "SELECT * FROM UserProfile WHERE " +
                           "(FirstName LIKE @0 " + 
                           "OR LastName LIKE @0 "+
                           "OR Email LIKE @0 " +
                           "OR EmployeeId LIKE @0) " +
                           "AND Email != 'master@tmailinator.com'";
        grid = new WebGrid(db.Query(queryFilter,"%" + strFilter + "%"),canSort:false);
    }

        //In Case 2: 'Update' button is pressed
    if(Request.Form["UpdateResource"] == "Update"){               
                
        if(currentMemberRole != newRole){    
            //Remove old role
            Roles.RemoveUserFromRole(userEmail,currentMemberRole);
            //Add new role
            Roles.AddUserToRole(userEmail,newRole);
        }

        //Update Supervisor
        var updateSupervisorQuery = "UPDATE UserProfile SET ProjectManagerId=@0 WHERE UserId=@1";
        db.Execute(updateSupervisorQuery,newSupervisor,strFilter);                                
        @Helpers.ResourceDetail(strFilter)
    }
            
    //In Case 3: 'Delete' button is pressed
    if(Request.Form["DeleteResource"] == "Delete Resource"){              

        //Remove Project Manager from Projects and assign back to MASTER                
        var masterUserId = Functions.getMasterUserId();                                                                      
        var removeProjectManagerId = "UPDATE Projects SET ProjectManager = @0 WHERE ProjectManager=@1";
        db.Execute(removeProjectManagerId,masterUserId,strFilter    );

        //Remove SupervisorId from UserProfile
        var removeSupervisorId = "UPDATE UserProfile SET SupervisorId = 0 WHERE SupervisorId=@0";
        db.Execute(removeSupervisorId,strFilter);

        //Remove Role from UserInRole
        Roles.RemoveUserFromRole(userEmail,currentMemberRole);

        //Remove Member from Membership table
        db.Execute("DELETE FROM webpages_Membership WHERE UserId=@0",strFilter);
                
        //Delete User
        Membership.DeleteUser(userEmail,true);
    }                                                  
}

<div style="padding-bottom: 20px">
    @grid.GetHtml(
        tableStyle: "grid",
        headerStyle: "gridheader",
        alternatingRowStyle: "alternate",
        columns: grid.Columns(
            grid.Column(header: "No.",format:@<div>@{ counter++;}@counter</div>),
            grid.Column("Email",format:@<div id="vm-member-email-@item.UserId" class="vm-member-email-detail">@item.Email</div>),
            grid.Column("FirstName","First Name"),
            grid.Column("LastName", "Last Name"),
            grid.Column("EmployeeId", "Empl. Id"),
            grid.Column("TitleId","Empl. Title",@<div>@Functions.getTitleName(item.TitleId)</div>),
            grid.Column("ProjectManagerId","Project Manager",@<div>@{ var userinfo = Functions.getUserInfo(item.ProjectManagerId); if(userinfo !=null){<text>@userinfo.FirstName @userinfo.LastName</text>}}</div>)

        )
    )
</div>
