@{
    var db = Database.Open("StarterSite");    
    WebGrid grid = null;
    int counter = 0;
}
<script>
    $(function () {

        /* OPEN DIALOGS */
        function openAddNewTaskDialog() {
            $("div#og-add-new-task").dialog({
                buttons: [
                { text: "Add",
                    click: function () {
                        var taskName = $("input#og-add-task-name").val();
                        var testTypeId = $("select#og-mt-list-test-type").find(":selected").val();
                        var cateId = $("select#og-mt-category-list").find(":selected").val();
                        var posting = $.post("/Admin/Processing.cshtml", { Action: "AddNewTask", TaskName: taskName, TestTypeId: testTypeId, CategoryId: cateId });
                        posting.done(function (data) {
                            $("div#og-add-new-task").dialog("close");
                            location.reload();
                        });
                    }
                },
                { text: "Cancel",
                    click: function () {
                        $("div#og-add-new-task").dialog("close");
                    }
                }
                ]
            });
        }

        function openCategoryDialog() {
            $("div#og-add-new-category").dialog(
            {
                buttons: [
                {
                    text: "Add",
                    click: function () {
                        var cateName = $("input#og-new-category-name").val();
                        var posting = $.post("/Admin/Processing.cshtml", { Action: "AddNewCate", CateName: cateName });
                        posting.done(function () {
                            $("div#og-add-new-category").dialog("close");
                            location.reload();
                        });
                    }
                },
                {
                    text: "Cancel",
                    click: function () {
                        $("div#og-add-new-category").dialog("close");
                    }
                }]
            });
        }

        /* WHEN USER CLICKS ON 'ADD NEW' BUTTON */
        $("button#og-add-new-task").click(function (event) {
            event.preventDefault();
            $("#mt-add-new-kind").dialog({
                buttons: [
                { text: "Next >", click: function () {
                    $("#mt-add-new-kind").dialog("close");
                    var kind = $("input[name=mt-add-new-task-category]:checked").val();
                    if (kind == "AddNewTask") {
                        openAddNewTaskDialog();
                    }
                    if (kind == "AddNewCate") {
                        openCategoryDialog();
                    }

                }
                }]
            });
        });

        /* WHEN USER CLICK ON THE TASK ITEM */
        $(".mt-task-item-name").click(function () {
            var taskId = $(this).attr('id').match("[0-9]+").toString();
            var posting = $.post("/Admin/Processing.cshtml", { Action: "EditTask", TaskId: taskId });
            posting.done(function (data) {
                var dialogContent = $("<div title='Edit/Delete task'></div>").append(data);
                $(dialogContent).dialog({
                    buttons: [
                    { text: "Update", click: function () {
                        var newTaskName = $("#mt-edit-task-name").val().toString();
                        var newTestTypeId = $("#mt-edit-task-testType").find(":selected").val().toString();
                        var newCateId = $("#mt-edit-task-category").find(":selected").val().toString();
                        var posting = $.post("/Admin/Processing.cshtml", { Action: "UpdateTaskInfo", TaskId: taskId, TaskName: newTaskName, TestType: newTestTypeId, CateId: newCateId });
                        posting.done(function (data) {
                            $(dialogContent).dialog("close");
                            location.reload();
                        });
                    }
                    },
                    { text: "Delete", click: function () {
                        var posting = $.post("/Admin/Processing.cshtml", { Action: "DeleteTaskItem", TaskId: taskId });
                        posting.done(function () {
                            $(dialogContent).dialog("close");
                            location.reload();
                        });
                    }
                    }
                    ]
                });
            });
        });

        /* WHEN USER CLICKS ON THE CATEGORY ITEM */
        $(".mt-category-name").click(function () {
            var cateId = $(this).attr('id').match("[0-9]+").toString();
            var posting = $.post("/Admin/Processing.cshtml", { Action: "EditCategoryItem", CateId: cateId });
            posting.done(function (data) {
                var dialogContent = $("<div title='Edit/Delete category'></div>").append(data);
                $(dialogContent).dialog(
                {
                    buttons: [
                    {
                        text: "Update",
                        click: function () {
                            var newCateName = $("input#mt-edit-category-name").val();
                            var updatePosting = $.post("/Admin/Processing.cshtml", { Action: "UpdateCategoryItem", CateId: cateId, CateName: newCateName });
                            updatePosting.done(function () {
                                $(dialogContent).dialog("close");
                                location.reload();
                            });
                        }
                    }]
                }
                );
            });
        });

    });

    //SET CSS FOR ACTIVE TAB
    $("#nav3").attr('class', 'componentActive');
    $("#nav3 a").css('color', 'blue');
    $("#sub-nav3").removeClass('hidden').addClass('shown');
</script>
<style>
    .mt-task-item-name, .mt-category-name:hover {
        cursor: pointer;
    }
    
</style>

@*-------------------- FILTER SECTION --------------------------------*@

<div>
    <form method="post">
        <div class="mt-line-up">
            <label><strong>Category :</strong></label>
            @Html.DropDownList("mt-cateList",null,Functions.getSelectListCategory(true),Request["mt-cateList"],null)
        </div>

        <div class="mt-line-up">
            <label><strong>Test Type :</strong></label>
            @Html.DropDownList("mt-testypeList",null,Functions.getSelectListTestType(true),Request["mt-testypeList"],null)
        </div>

        <div class="mt-line-up">
            <input name="mt-task-name" type="text" placeholder="Task name" value="@Request["mt-task-name"]" style="width: 250px">
        </div>

        <div class="mt-line-up">
            <button class="tk-button">Search</button>
            <button class="tk-button" id="og-add-new-task">Add new</button>
        </div>
    </form>
</div>


@* --------------- RESULT SECTION ---------------------*@

@if(IsPost){
    var chosenCategoryId = Request["mt-cateList"].AsInt();
    var chosenTestType = Request["mt-testypeList"].AsInt();
    var chosenTaskName = Request["mt-task-name"];

    //chosenCategoryId =0 or chosenTestType = 0 mean that user is choosing "All" in drop down list;
    var queryFilterCategory = chosenCategoryId ==0?"(SELECT Id FROM Categories) ": "(SELECT Id FROM Categories WHERE Id=@0) ";
    var queryFilterTestType = chosenTestType ==0?"(SELECT Id FROM TestType) ": "(SELECT Id FROM TestType WHERE Id=@1) ";
    
    var queryFilteredTasks = "SELECT * FROM Tasks WHERE " +
                        "CategoryId IN " + queryFilterCategory +
                        "AND TypeId IN " + queryFilterTestType +
                        "AND (Name LIKE @2)";

@*
    <p>@queryFilteredTasks</p>
    <p>@chosenCategoryId</p>
    <p>@chosenTestType</p>
    <p>@chosenTaskName</p>
  *@  
    var filterTasks = db.Query(queryFilteredTasks,chosenCategoryId,chosenTestType,"%"+chosenTaskName+"%");
    grid = new WebGrid(filterTasks,rowsPerPage:100,defaultSort: "CategoryId", canSort:false);
}
else{
   var listTasks = Functions.getAllTasks();
   grid= new WebGrid(listTasks,rowsPerPage:100,defaultSort: "CategoryId",canSort: false);
  
}

<div style="margin-top: 30px; padding-bottom: 20px">
    @grid.GetHtml(
        tableStyle: "grid",
        headerStyle: "gridheader",
        alternatingRowStyle: "alternate",
        columns: grid.Columns(
            grid.Column(header:"No.",format:@<div style="text-align: center">@{counter++;}@counter</div>),
            grid.Column("Name",format:@<div class="mt-task-item-name" id="mt-task-item-@item.Id">@item.Name</div>),
            grid.Column("TypeId","Test Type",format:@<div>@Functions.getTestType(item.TypeId).Name</div>),
            grid.Column("CategoryId","Category",format:@<div class="mt-category-name" id="mt-category-name-@item.CategoryId">@Functions.getCategoryName(item.CategoryId)</div>)
        )    
    )  
</div>


@*------------- ADD NEW TASK/CATEGORIES DIALOG ----------------------*@

<div title="Add new task" id="og-add-new-task" class="hidden">
    <div style="margin: 10px;">
        <label style="font-size: smaller"><strong>Task Name</strong></label>
        <br>
        <input type="text" id="og-add-task-name">
    </div>
    <div style="margin: 10px">
        <label style="font-size: smaller"><strong>Test Type</strong></label>
        <br>
        @Html.DropDownList("og-mt-list-test-type",Functions.getSelectListTestType())
    </div>
    <div style="margin: 10px">
        <label style="font-size: smaller"><strong>Category</strong></label>
        <br>
        @Html.DropDownList("og-mt-category-list",Functions.getSelectListCategory())
    </div>
</div>

<div id="mt-add-new-kind" title="Add new task/category" style="margin: auto" class="hidden">
    <div><strong>Choose a kind below :</strong></div>
    <div style="margin-left: 10px">
        @Html.RadioButton("mt-add-new-task-category","AddNewTask",true,new{style="margin:5px"}) <label>Add new task</label>
        <br>
        @Html.RadioButton("mt-add-new-task-category","AddNewCate",new{style="margin:5px"}) <label>Add new category</label>
    </div>
</div>

<div title="Add new category" id="og-add-new-category" style="margin-top: 10px" class="hidden">
    <label><strong>Name :</strong></label>
    <input type="text" id="og-new-category-name">
</div>